
ir_imple.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000254  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003dc  080003e4  000013e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003dc  080003dc  000013e4  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080003dc  080003dc  000013e4  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080003dc  080003e4  000013e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003dc  080003dc  000013dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003e0  080003e0  000013e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000013e4  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000013e4  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000961  00000000  00000000  0000140e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000307  00000000  00000000  00001d6f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00002078  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000077  00000000  00000000  00002130  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00018ed2  00000000  00000000  000021a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000ee6  00000000  00000000  0001b079  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008b80f  00000000  00000000  0001bf5f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a776e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000016c  00000000  00000000  000a77b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 00000025  00000000  00000000  000a7920  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000050  00000000  00000000  000a7945  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080003c4 	.word	0x080003c4

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080003c4 	.word	0x080003c4

080001c8 <ir_init>:

#include "ir.h"


void ir_init(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	af00      	add	r7, sp, #0

	RCC -> AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 80001cc:	4b19      	ldr	r3, [pc, #100]	@ (8000234 <ir_init+0x6c>)
 80001ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001d0:	4a18      	ldr	r2, [pc, #96]	@ (8000234 <ir_init+0x6c>)
 80001d2:	f043 0308 	orr.w	r3, r3, #8
 80001d6:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 80001d8:	4b16      	ldr	r3, [pc, #88]	@ (8000234 <ir_init+0x6c>)
 80001da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001dc:	4a15      	ldr	r2, [pc, #84]	@ (8000234 <ir_init+0x6c>)
 80001de:	f043 0301 	orr.w	r3, r3, #1
 80001e2:	6313      	str	r3, [r2, #48]	@ 0x30

	//led config

	GPIOD->MODER &= ~(BV(GREEN_LED *2 +1));
 80001e4:	4b14      	ldr	r3, [pc, #80]	@ (8000238 <ir_init+0x70>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a13      	ldr	r2, [pc, #76]	@ (8000238 <ir_init+0x70>)
 80001ea:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 80001ee:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= BV(GREEN_LED * 2);
 80001f0:	4b11      	ldr	r3, [pc, #68]	@ (8000238 <ir_init+0x70>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a10      	ldr	r2, [pc, #64]	@ (8000238 <ir_init+0x70>)
 80001f6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80001fa:	6013      	str	r3, [r2, #0]

	GPIOD->PUPDR &= ~(BV(GREEN_LED *2 +1) | BV(GREEN_LED*2));
 80001fc:	4b0e      	ldr	r3, [pc, #56]	@ (8000238 <ir_init+0x70>)
 80001fe:	68db      	ldr	r3, [r3, #12]
 8000200:	4a0d      	ldr	r2, [pc, #52]	@ (8000238 <ir_init+0x70>)
 8000202:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8000206:	60d3      	str	r3, [r2, #12]
	GPIOD->OSPEEDR &= ~(BV(GREEN_LED*2  +1) | BV(GREEN_LED*2));
 8000208:	4b0b      	ldr	r3, [pc, #44]	@ (8000238 <ir_init+0x70>)
 800020a:	689b      	ldr	r3, [r3, #8]
 800020c:	4a0a      	ldr	r2, [pc, #40]	@ (8000238 <ir_init+0x70>)
 800020e:	f023 7340 	bic.w	r3, r3, #50331648	@ 0x3000000
 8000212:	6093      	str	r3, [r2, #8]


	GPIOA->MODER &= ~(BV(IR_SENSOR *2 +1 ) | BV(IR_SENSOR));
 8000214:	4b09      	ldr	r3, [pc, #36]	@ (800023c <ir_init+0x74>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a08      	ldr	r2, [pc, #32]	@ (800023c <ir_init+0x74>)
 800021a:	f023 0303 	bic.w	r3, r3, #3
 800021e:	6013      	str	r3, [r2, #0]
	GPIOA ->PUPDR &= ~(BV(IR_SENSOR * 2 +1 ) | BV(IR_SENSOR * 2));
 8000220:	4b06      	ldr	r3, [pc, #24]	@ (800023c <ir_init+0x74>)
 8000222:	68db      	ldr	r3, [r3, #12]
 8000224:	4a05      	ldr	r2, [pc, #20]	@ (800023c <ir_init+0x74>)
 8000226:	f023 0303 	bic.w	r3, r3, #3
 800022a:	60d3      	str	r3, [r2, #12]

}
 800022c:	bf00      	nop
 800022e:	46bd      	mov	sp, r7
 8000230:	bc80      	pop	{r7}
 8000232:	4770      	bx	lr
 8000234:	40023800 	.word	0x40023800
 8000238:	40020c00 	.word	0x40020c00
 800023c:	40020000 	.word	0x40020000

08000240 <led_on>:


void led_on()
{
 8000240:	b480      	push	{r7}
 8000242:	af00      	add	r7, sp, #0
	GPIOD->ODR |= BV(GREEN_LED);
 8000244:	4b04      	ldr	r3, [pc, #16]	@ (8000258 <led_on+0x18>)
 8000246:	695b      	ldr	r3, [r3, #20]
 8000248:	4a03      	ldr	r2, [pc, #12]	@ (8000258 <led_on+0x18>)
 800024a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800024e:	6153      	str	r3, [r2, #20]
}
 8000250:	bf00      	nop
 8000252:	46bd      	mov	sp, r7
 8000254:	bc80      	pop	{r7}
 8000256:	4770      	bx	lr
 8000258:	40020c00 	.word	0x40020c00

0800025c <led_off>:

void led_off()
{
 800025c:	b480      	push	{r7}
 800025e:	af00      	add	r7, sp, #0
	GPIOD->ODR &= ~(BV(GREEN_LED));
 8000260:	4b04      	ldr	r3, [pc, #16]	@ (8000274 <led_off+0x18>)
 8000262:	695b      	ldr	r3, [r3, #20]
 8000264:	4a03      	ldr	r2, [pc, #12]	@ (8000274 <led_off+0x18>)
 8000266:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800026a:	6153      	str	r3, [r2, #20]
}
 800026c:	bf00      	nop
 800026e:	46bd      	mov	sp, r7
 8000270:	bc80      	pop	{r7}
 8000272:	4770      	bx	lr
 8000274:	40020c00 	.word	0x40020c00

08000278 <ir_detect>:

uint16_t ir_detect()
{
 8000278:	b480      	push	{r7}
 800027a:	af00      	add	r7, sp, #0

	return GPIOA->IDR & BV(IR_SENSOR) ? 1:0;
 800027c:	4b06      	ldr	r3, [pc, #24]	@ (8000298 <ir_detect+0x20>)
 800027e:	691b      	ldr	r3, [r3, #16]
 8000280:	f003 0301 	and.w	r3, r3, #1
 8000284:	2b00      	cmp	r3, #0
 8000286:	bf14      	ite	ne
 8000288:	2301      	movne	r3, #1
 800028a:	2300      	moveq	r3, #0
 800028c:	b2db      	uxtb	r3, r3
}
 800028e:	4618      	mov	r0, r3
 8000290:	46bd      	mov	sp, r7
 8000292:	bc80      	pop	{r7}
 8000294:	4770      	bx	lr
 8000296:	bf00      	nop
 8000298:	40020000 	.word	0x40020000

0800029c <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 800029c:	b580      	push	{r7, lr}
 800029e:	af00      	add	r7, sp, #0
	ir_init();
 80002a0:	f7ff ff92 	bl	80001c8 <ir_init>
	while(1)
	{
		if(ir_detect() == 0)
 80002a4:	f7ff ffe8 	bl	8000278 <ir_detect>
 80002a8:	4603      	mov	r3, r0
 80002aa:	2b00      	cmp	r3, #0
 80002ac:	d102      	bne.n	80002b4 <main+0x18>
		{
			led_on();
 80002ae:	f7ff ffc7 	bl	8000240 <led_on>
 80002b2:	e7f7      	b.n	80002a4 <main+0x8>

		}
		else
		{
			led_off();
 80002b4:	f7ff ffd2 	bl	800025c <led_off>
		if(ir_detect() == 0)
 80002b8:	e7f4      	b.n	80002a4 <main+0x8>
	...

080002bc <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */

  DWT_Init();
 80002c0:	f000 f802 	bl	80002c8 <DWT_Init>
}
 80002c4:	bf00      	nop
 80002c6:	bd80      	pop	{r7, pc}

080002c8 <DWT_Init>:
}
#pragma GCC pop_options


uint32_t DWT_Init(void)
{
 80002c8:	b480      	push	{r7}
 80002ca:	af00      	add	r7, sp, #0
    /* Disable TRC */
    CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 80002cc:	4b14      	ldr	r3, [pc, #80]	@ (8000320 <DWT_Init+0x58>)
 80002ce:	68db      	ldr	r3, [r3, #12]
 80002d0:	4a13      	ldr	r2, [pc, #76]	@ (8000320 <DWT_Init+0x58>)
 80002d2:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80002d6:	60d3      	str	r3, [r2, #12]
    /* Enable TRC */
    CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 80002d8:	4b11      	ldr	r3, [pc, #68]	@ (8000320 <DWT_Init+0x58>)
 80002da:	68db      	ldr	r3, [r3, #12]
 80002dc:	4a10      	ldr	r2, [pc, #64]	@ (8000320 <DWT_Init+0x58>)
 80002de:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80002e2:	60d3      	str	r3, [r2, #12]
    /* Disable clock cycle counter */
    DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 80002e4:	4b0f      	ldr	r3, [pc, #60]	@ (8000324 <DWT_Init+0x5c>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	4a0e      	ldr	r2, [pc, #56]	@ (8000324 <DWT_Init+0x5c>)
 80002ea:	f023 0301 	bic.w	r3, r3, #1
 80002ee:	6013      	str	r3, [r2, #0]
    /* Enable  clock cycle counter */
    DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 80002f0:	4b0c      	ldr	r3, [pc, #48]	@ (8000324 <DWT_Init+0x5c>)
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	4a0b      	ldr	r2, [pc, #44]	@ (8000324 <DWT_Init+0x5c>)
 80002f6:	f043 0301 	orr.w	r3, r3, #1
 80002fa:	6013      	str	r3, [r2, #0]
    /* Reset the clock cycle counter value */
    DWT->CYCCNT = 0;
 80002fc:	4b09      	ldr	r3, [pc, #36]	@ (8000324 <DWT_Init+0x5c>)
 80002fe:	2200      	movs	r2, #0
 8000300:	605a      	str	r2, [r3, #4]
    /* 3 NO OPERATION instructions */
    __ASM volatile ("NOP");
 8000302:	bf00      	nop
    __ASM volatile ("NOP");
 8000304:	bf00      	nop
    __ASM volatile ("NOP");
 8000306:	bf00      	nop
    /* Check if clock cycle counter has started: 0 on success */
    return !(DWT->CYCCNT);
 8000308:	4b06      	ldr	r3, [pc, #24]	@ (8000324 <DWT_Init+0x5c>)
 800030a:	685b      	ldr	r3, [r3, #4]
 800030c:	2b00      	cmp	r3, #0
 800030e:	bf0c      	ite	eq
 8000310:	2301      	moveq	r3, #1
 8000312:	2300      	movne	r3, #0
 8000314:	b2db      	uxtb	r3, r3
}
 8000316:	4618      	mov	r0, r3
 8000318:	46bd      	mov	sp, r7
 800031a:	bc80      	pop	{r7}
 800031c:	4770      	bx	lr
 800031e:	bf00      	nop
 8000320:	e000edf0 	.word	0xe000edf0
 8000324:	e0001000 	.word	0xe0001000

08000328 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000328:	480d      	ldr	r0, [pc, #52]	@ (8000360 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800032a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800032c:	f7ff ffc6 	bl	80002bc <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000330:	480c      	ldr	r0, [pc, #48]	@ (8000364 <LoopForever+0x6>)
  ldr r1, =_edata
 8000332:	490d      	ldr	r1, [pc, #52]	@ (8000368 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000334:	4a0d      	ldr	r2, [pc, #52]	@ (800036c <LoopForever+0xe>)
  movs r3, #0
 8000336:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000338:	e002      	b.n	8000340 <LoopCopyDataInit>

0800033a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800033a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800033c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800033e:	3304      	adds	r3, #4

08000340 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000340:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000342:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000344:	d3f9      	bcc.n	800033a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000346:	4a0a      	ldr	r2, [pc, #40]	@ (8000370 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000348:	4c0a      	ldr	r4, [pc, #40]	@ (8000374 <LoopForever+0x16>)
  movs r3, #0
 800034a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800034c:	e001      	b.n	8000352 <LoopFillZerobss>

0800034e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800034e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000350:	3204      	adds	r2, #4

08000352 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000352:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000354:	d3fb      	bcc.n	800034e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000356:	f000 f811 	bl	800037c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800035a:	f7ff ff9f 	bl	800029c <main>

0800035e <LoopForever>:

LoopForever:
  b LoopForever
 800035e:	e7fe      	b.n	800035e <LoopForever>
  ldr   r0, =_estack
 8000360:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000364:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000368:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800036c:	080003e4 	.word	0x080003e4
  ldr r2, =_sbss
 8000370:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000374:	2000001c 	.word	0x2000001c

08000378 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000378:	e7fe      	b.n	8000378 <ADC_IRQHandler>
	...

0800037c <__libc_init_array>:
 800037c:	b570      	push	{r4, r5, r6, lr}
 800037e:	4d0d      	ldr	r5, [pc, #52]	@ (80003b4 <__libc_init_array+0x38>)
 8000380:	4c0d      	ldr	r4, [pc, #52]	@ (80003b8 <__libc_init_array+0x3c>)
 8000382:	1b64      	subs	r4, r4, r5
 8000384:	10a4      	asrs	r4, r4, #2
 8000386:	2600      	movs	r6, #0
 8000388:	42a6      	cmp	r6, r4
 800038a:	d109      	bne.n	80003a0 <__libc_init_array+0x24>
 800038c:	4d0b      	ldr	r5, [pc, #44]	@ (80003bc <__libc_init_array+0x40>)
 800038e:	4c0c      	ldr	r4, [pc, #48]	@ (80003c0 <__libc_init_array+0x44>)
 8000390:	f000 f818 	bl	80003c4 <_init>
 8000394:	1b64      	subs	r4, r4, r5
 8000396:	10a4      	asrs	r4, r4, #2
 8000398:	2600      	movs	r6, #0
 800039a:	42a6      	cmp	r6, r4
 800039c:	d105      	bne.n	80003aa <__libc_init_array+0x2e>
 800039e:	bd70      	pop	{r4, r5, r6, pc}
 80003a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80003a4:	4798      	blx	r3
 80003a6:	3601      	adds	r6, #1
 80003a8:	e7ee      	b.n	8000388 <__libc_init_array+0xc>
 80003aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80003ae:	4798      	blx	r3
 80003b0:	3601      	adds	r6, #1
 80003b2:	e7f2      	b.n	800039a <__libc_init_array+0x1e>
 80003b4:	080003dc 	.word	0x080003dc
 80003b8:	080003dc 	.word	0x080003dc
 80003bc:	080003dc 	.word	0x080003dc
 80003c0:	080003e0 	.word	0x080003e0

080003c4 <_init>:
 80003c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003c6:	bf00      	nop
 80003c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ca:	bc08      	pop	{r3}
 80003cc:	469e      	mov	lr, r3
 80003ce:	4770      	bx	lr

080003d0 <_fini>:
 80003d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003d2:	bf00      	nop
 80003d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003d6:	bc08      	pop	{r3}
 80003d8:	469e      	mov	lr, r3
 80003da:	4770      	bx	lr
